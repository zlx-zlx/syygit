<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.softjx.dao.SchoolMapper" >
  <resultMap id="BaseResultMap" type="com.softjx.model.School" >
    <id column="sch_id" property="schId" jdbcType="INTEGER" />
    <result column="sch_code" property="schCode" jdbcType="VARCHAR" />
    <result column="sch_name" property="schName" jdbcType="VARCHAR" />
    <result column="sch_pass" property="schPass" jdbcType="VARCHAR" />
    <result column="sch_create_time" property="schCreateTime" jdbcType="TIMESTAMP" />
    <result column="sch_create_by" property="schCreateBy" jdbcType="VARCHAR" />
    <result column="sch_flag" property="schFlag" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sch_id, sch_code, sch_name, sch_pass, sch_create_time, sch_create_by, sch_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.softjx.model.SchoolExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from school
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from school
    where sch_id = #{schId,jdbcType=INTEGER}
  </select>
   <select id="selectByPrimaryKee" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from school
    where sch_code = #{sch_code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from school
    where sch_id = #{schId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.softjx.model.SchoolExample" >
    delete from school
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.softjx.model.School" >
    insert into school (sch_id, sch_code, sch_name, 
      sch_pass, sch_create_time, sch_create_by, 
      sch_flag)
    values (#{schId,jdbcType=INTEGER}, #{schCode,jdbcType=VARCHAR}, #{schName,jdbcType=VARCHAR}, 
      #{schPass,jdbcType=VARCHAR}, #{schCreateTime,jdbcType=TIMESTAMP}, #{schCreateBy,jdbcType=VARCHAR}, 
      #{schFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.softjx.model.School" >
    insert into school
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="schId != null" >
        sch_id,
      </if>
      <if test="schCode != null" >
        sch_code,
      </if>
      <if test="schName != null" >
        sch_name,
      </if>
      <if test="schPass != null" >
        sch_pass,
      </if>
      <if test="schCreateTime != null" >
        sch_create_time,
      </if>
      <if test="schCreateBy != null" >
        sch_create_by,
      </if>
      <if test="schFlag != null" >
        sch_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="schId != null" >
        #{schId,jdbcType=INTEGER},
      </if>
      <if test="schCode != null" >
        #{schCode,jdbcType=VARCHAR},
      </if>
      <if test="schName != null" >
        #{schName,jdbcType=VARCHAR},
      </if>
      <if test="schPass != null" >
        #{schPass,jdbcType=VARCHAR},
      </if>
      <if test="schCreateTime != null" >
        #{schCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="schCreateBy != null" >
        #{schCreateBy,jdbcType=VARCHAR},
      </if>
      <if test="schFlag != null" >
        #{schFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.softjx.model.SchoolExample" resultType="java.lang.Integer" >
    select count(*) from school
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update school
    <set >
      <if test="record.schId != null" >
        sch_id = #{record.schId,jdbcType=INTEGER},
      </if>
      <if test="record.schCode != null" >
        sch_code = #{record.schCode,jdbcType=VARCHAR},
      </if>
      <if test="record.schName != null" >
        sch_name = #{record.schName,jdbcType=VARCHAR},
      </if>
      <if test="record.schPass != null" >
        sch_pass = #{record.schPass,jdbcType=VARCHAR},
      </if>
      <if test="record.schCreateTime != null" >
        sch_create_time = #{record.schCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.schCreateBy != null" >
        sch_create_by = #{record.schCreateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.schFlag != null" >
        sch_flag = #{record.schFlag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update school
    set sch_id = #{record.schId,jdbcType=INTEGER},
      sch_code = #{record.schCode,jdbcType=VARCHAR},
      sch_name = #{record.schName,jdbcType=VARCHAR},
      sch_pass = #{record.schPass,jdbcType=VARCHAR},
      sch_create_time = #{record.schCreateTime,jdbcType=TIMESTAMP},
      sch_create_by = #{record.schCreateBy,jdbcType=VARCHAR},
      sch_flag = #{record.schFlag,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.softjx.model.School" >
    update school
    <set >
      <if test="schCode != null" >
        sch_code = #{schCode,jdbcType=VARCHAR},
      </if>
      <if test="schName != null" >
        sch_name = #{schName,jdbcType=VARCHAR},
      </if>
      <if test="schPass != null" >
        sch_pass = #{schPass,jdbcType=VARCHAR},
      </if>
      <if test="schCreateTime != null" >
        sch_create_time = #{schCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="schCreateBy != null" >
        sch_create_by = #{schCreateBy,jdbcType=VARCHAR},
      </if>
      <if test="schFlag != null" >
        sch_flag = #{schFlag,jdbcType=BIT},
      </if>
    </set>
    where sch_id = #{schId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.softjx.model.School" >
    update school
    set sch_code = #{schCode,jdbcType=VARCHAR},
      sch_name = #{schName,jdbcType=VARCHAR},
      sch_pass = #{schPass,jdbcType=VARCHAR},
      sch_create_time = #{schCreateTime,jdbcType=TIMESTAMP},
      sch_create_by = #{schCreateBy,jdbcType=VARCHAR},
      sch_flag = #{schFlag,jdbcType=BIT}
    where sch_id = #{schId,jdbcType=INTEGER}
  </update>
  
  
	


</mapper>